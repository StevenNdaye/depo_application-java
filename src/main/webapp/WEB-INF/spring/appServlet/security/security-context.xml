<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">

    <http auto-config="true" use-expressions="true">
        <form-login
                login-page="/login"
                default-target-url="/welcome"
                authentication-failure-url="/loginError"/>
        <remember-me />
        <logout logout-url="/logout" logout-success-url="/?logout_successful=1" invalidate-session="true"/>
    </http>


    <authentication-manager>
        <!-- The commented configuration is used by the jdbc user service, the query connects straight to the database. Obviously this is not ideal-->
        <!--<authentication-provider>-->
            <!--<jdbc-user-service data-source-ref="dataSource"-->
                               <!--users-by-username-query="select username, password, active_flag from account where username = ?"-->
                               <!--authorities-by-username-query="select a.username, r.name from account a, role r, account_role ar where ar.account_id = a.id and ar.role_id = r.id and a.username = ?" />-->
        <!--</authentication-provider>-->
        <authentication-provider user-service-ref="accountDetailsServiceAdapter" />
    </authentication-manager>



</beans:beans>
